<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="34">
  <CheatEntries>
    <CheatEntry>
      <ID>44</ID>
      <Description>"初始化"</Description>
      <Options moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : AoE2DE_s.exe
  Version:
  Date   : 2020-11-19
  Author : 94817

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,AoE2DE_s.exe,48 8B 01 89 7D 84) // should be unique
alloc(newmem,$1000,INJECT)
alloc(BaseAddr,$20,INJECT)

define(Param,BaseAddr+8)
define(Pos1,AoE2DE_s.exe+3244A10)
define(Pos2,AoE2DE_s.exe+3244A14)

label(unit)
label(code)
label(return)

newmem:
  cmp [rcx+10],1
  jne unit
  mov [BaseAddr],rcx

unit:
  cmp qword ptr ds:[Param],0
  je code
  push rbx
  push rax
  push rdx
  push rcx
  sub rsp,30
  mov rbx,qword ptr ds:[BaseAddr]
  mov rax,qword ptr ds:[rbx]
  mov dword ptr ss:[rsp+28],1
  mov dword ptr ss:[rsp+20],0
  movss xmm2,dword ptr ds:[Pos1]
  movss xmm3,dword ptr ds:[Pos2]
  mov edx,dword ptr ds:[Param]
  mov rcx,rbx
  call qword ptr ds:[rax+168]
  add rsp,30
  pop rcx
  pop rdx
  pop rax
  pop rbx
  mov qword ptr ds:[Param],0

code:
  mov rax,[rcx]
  mov [rbp-7C],edi
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)
registersymbol(BaseAddr)

[DISABLE]

INJECT:
  db 48 8B 01 89 7D 84

unregistersymbol(BaseAddr)
dealloc(BaseAddr)
unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 7FF6CCE5A99D

7FF6CCE5A974: 48 8B 86 38 07 00 00  - mov rax,[rsi+00000738]
7FF6CCE5A97B: 48 8B 0C C8           - mov rcx,[rax+rcx*8]
7FF6CCE5A97F: 89 7D 80              - mov [rbp-80],edi
7FF6CCE5A982: 48 8D 55 80           - lea rdx,[rbp-80]
7FF6CCE5A986: E8 F5 C7 02 00        - call 7FF6CCE87180
7FF6CCE5A98B: 84 C0                 - test al,al
7FF6CCE5A98D: 74 21                 - je 7FF6CCE5A9B0
7FF6CCE5A98F: 4D 03 F6              - add r14,r14
7FF6CCE5A992: 48 8B 86 38 07 00 00  - mov rax,[rsi+00000738]
7FF6CCE5A999: 4A 8B 0C F0           - mov rcx,[rax+r14*8]
// ---------- INJECTING HERE ----------
7FF6CCE5A99D: 48 8B 01              - mov rax,[rcx]
// ---------- DONE INJECTING  ----------
7FF6CCE5A9A0: 89 7D 84              - mov [rbp-7C],edi
7FF6CCE5A9A3: 48 8D 55 84           - lea rdx,[rbp-7C]
7FF6CCE5A9A7: FF 90 A8 02 00 00     - call qword ptr [rax+000002A8]
7FF6CCE5A9AD: 45 89 2F              - mov [r15],r13d
7FF6CCE5A9B0: FF C3                 - inc ebx
7FF6CCE5A9B2: 48 8B 96 38 07 00 00  - mov rdx,[rsi+00000738]
7FF6CCE5A9B9: 48 8B CA              - mov rcx,rdx
7FF6CCE5A9BC: 48 8B 86 40 07 00 00  - mov rax,[rsi+00000740]
7FF6CCE5A9C3: 48 2B C2              - sub rax,rdx
7FF6CCE5A9C6: 48 C1 F8 04           - sar rax,04
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>45</Key>
          </Keys>
          <ID>0</ID>
          <ActivateSound TTS="EN">{MRDescription} Activated</ActivateSound>
          <DeactivateSound TTS="EN">{MRDescription} Deactivated</DeactivateSound>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>45</ID>
          <Description>"玩家地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>8 Bytes</VariableType>
          <Address>BaseAddr</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"食物"</Description>
          <VariableType>Float</VariableType>
          <Address>BaseAddr</Address>
          <Offsets>
            <Offset>0</Offset>
            <Offset>70</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"木头"</Description>
          <VariableType>Float</VariableType>
          <Address>BaseAddr</Address>
          <Offsets>
            <Offset>4</Offset>
            <Offset>70</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>30</ID>
          <Description>"石头"</Description>
          <VariableType>Float</VariableType>
          <Address>BaseAddr</Address>
          <Offsets>
            <Offset>8</Offset>
            <Offset>70</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>46</ID>
          <Description>"黄金"</Description>
          <VariableType>Float</VariableType>
          <Address>BaseAddr</Address>
          <Offsets>
            <Offset>C</Offset>
            <Offset>70</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>47</ID>
          <Description>"人口"</Description>
          <VariableType>Float</VariableType>
          <Address>BaseAddr</Address>
          <Offsets>
            <Offset>2C</Offset>
            <Offset>70</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>50</ID>
          <Description>"坐标初始化（无需勾选）"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : AoE2DE_s.exe
  Version:
  Date   : 2020-07-21
  Author : 94817

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,AoE2DE_s.exe,F3 0F 10 B0 78 01 00 00 F3) // should be unique
alloc(newmem,$1000,AoE2DE_s.exe+E67805)

define(Pos1,BaseAddr+10)
define(Pos2,BaseAddr+14)

label(code)
label(return)

newmem:
  push rdx
  mov edx,[rax+00000178]
  mov [Pos1],edx
  mov edx,[rax+0000017C]
  mov [Pos2],edx
  pop rdx

code:
  movss xmm6,[rax+00000178]
  jmp return

INJECT:
  jmp newmem
  nop 3
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 0F 10 B0 78 01 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: AoE2DE_s.exe+E67805

"AoE2DE_s.exe"+E677D0: 0F 84 F8 03 00 00        -  je AoE2DE_s.exe+E67BCE
"AoE2DE_s.exe"+E677D6: 0F 29 74 24 60           -  movaps [rsp+60],xmm6
"AoE2DE_s.exe"+E677DB: 0F 29 7C 24 50           -  movaps [rsp+50],xmm7
"AoE2DE_s.exe"+E677E0: 44 0F 29 44 24 40        -  movaps [rsp+40],xmm8
"AoE2DE_s.exe"+E677E6: E8 45 94 FF FF           -  call AoE2DE_s.exe+E60C30
"AoE2DE_s.exe"+E677EB: 48 8B 0D E6 F5 D2 01     -  mov rcx,[AoE2DE_s.exe+2B96DD8]
"AoE2DE_s.exe"+E677F2: E8 29 F3 9B FF           -  call AoE2DE_s.exe+826B20
"AoE2DE_s.exe"+E677F7: 49 8B 86 18 02 00 00     -  mov rax,[r14+00000218]
"AoE2DE_s.exe"+E677FE: 48 8B CF                 -  mov rcx,rdi
"AoE2DE_s.exe"+E67801: 44 0F 28 C0              -  movaps xmm8,xmm0
// ---------- INJECTING HERE ----------
"AoE2DE_s.exe"+E67805: F3 0F 10 B0 78 01 00 00  -  movss xmm6,[rax+00000178]
// ---------- DONE INJECTING  ----------
"AoE2DE_s.exe"+E6780D: F3 0F 10 B8 7C 01 00 00  -  movss xmm7,[rax+0000017C]
"AoE2DE_s.exe"+E67815: F3 0F 11 35 57 17 03 02  -  movss [AoE2DE_s.exe+2E98F74],xmm6
"AoE2DE_s.exe"+E6781D: F3 0F 11 3D 53 17 03 02  -  movss [AoE2DE_s.exe+2E98F78],xmm7
"AoE2DE_s.exe"+E67825: 41 8B 86 5C 02 00 00     -  mov eax,[r14+0000025C]
"AoE2DE_s.exe"+E6782C: 45 8B 8E 58 02 00 00     -  mov r9d,[r14+00000258]
"AoE2DE_s.exe"+E67833: 45 8B 86 4C 02 00 00     -  mov r8d,[r14+0000024C]
"AoE2DE_s.exe"+E6783A: 41 8B 96 48 02 00 00     -  mov edx,[r14+00000248]
"AoE2DE_s.exe"+E67841: 89 44 24 20              -  mov [rsp+20],eax
"AoE2DE_s.exe"+E67845: E8 46 C4 6E FF           -  call AoE2DE_s.exe+553C90
"AoE2DE_s.exe"+E6784A: 0F 57 C0                 -  xorps xmm0,xmm0
}
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>18</Key>
                <Key>98</Key>
              </Keys>
              <ID>0</ID>
              <ActivateSound TTS="EN">{MRDescription} Activated</ActivateSound>
              <DeactivateSound TTS="EN">{MRDescription} Deactivated</DeactivateSound>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>16</ID>
              <Description>"单位种类"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>8 Bytes</VariableType>
              <Address>BaseAddr+8</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>97</Key>
                  </Keys>
                  <Value>4D4</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>98</Key>
                  </Keys>
                  <Value>22A</Value>
                  <ID>1</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>99</Key>
                  </Keys>
                  <Value>231</Value>
                  <ID>2</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>100</Key>
                  </Keys>
                  <Value>212</Value>
                  <ID>3</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>54</ID>
      <Description>"单位触发Call（无需勾选）"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : AoE2DE_s.exe
  Version:
  Date   : 2020-11-18
  Author : 94817

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,AoE2DE_s.exe,48 8B 03 41 BC 01 00 00 00) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  mov rax,[rbx]
  mov r12d,00000001
  jmp return

INJECT:
  jmp newmem
  nop 4
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 48 8B 03 41 BC 01 00 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: AoE2DE_s.exe+E6120E

AoE2DE_s.exe+E611E6: 44 88 7C 24 38     - mov [rsp+38],r15l
AoE2DE_s.exe+E611EB: C6 44 24 30 01     - mov byte ptr [rsp+30],01
AoE2DE_s.exe+E611F0: 44 88 7C 24 28     - mov [rsp+28],r15l
AoE2DE_s.exe+E611F5: 4C 89 7C 24 20     - mov [rsp+20],r15
AoE2DE_s.exe+E611FA: 0F 28 DE           - movaps xmm3,xmm6
AoE2DE_s.exe+E611FD: 0F 28 D7           - movaps xmm2,xmm7
AoE2DE_s.exe+E61200: 48 8B D3           - mov rdx,rbx
AoE2DE_s.exe+E61203: FF 50 50           - call qword ptr [rax+50]
AoE2DE_s.exe+E61206: 84 C0              - test al,al
AoE2DE_s.exe+E61208: 0F 85 EB 34 00 00  - jne AoE2DE_s.exe+E646F9
// ---------- INJECTING HERE ----------
AoE2DE_s.exe+E6120E: 48 8B 03           - mov rax,[rbx]
// ---------- DONE INJECTING  ----------
AoE2DE_s.exe+E61211: 41 BC 01 00 00 00  - mov r12d,00000001
AoE2DE_s.exe+E61217: 44 89 64 24 28     - mov [rsp+28],r12d
AoE2DE_s.exe+E6121C: 0F 57 C0           - xorps xmm0,xmm0
AoE2DE_s.exe+E6121F: F3 0F 11 44 24 20  - movss [rsp+20],xmm0
AoE2DE_s.exe+E61225: 0F 28 DE           - movaps xmm3,xmm6
AoE2DE_s.exe+E61228: 0F 28 D7           - movaps xmm2,xmm7
AoE2DE_s.exe+E6122B: 8B 57 28           - mov edx,[rdi+28]
AoE2DE_s.exe+E6122E: 48 8B CB           - mov rcx,rbx
AoE2DE_s.exe+E61231: FF 90 68 01 00 00  - call qword ptr [rax+00000168]
AoE2DE_s.exe+E61237: 48 8B D8           - mov rbx,rax
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>mythread_create</Name>
      <Address>1BC20E60000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>关于表格信息:
</Comments>
</CheatTable>
